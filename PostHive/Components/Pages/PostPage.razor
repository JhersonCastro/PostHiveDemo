@page "/Post/{Id}"
@using Microsoft.AspNetCore.Mvc
@using Services
@inject PostService PostService
@inject CookiesService CookieService
@inject UserState UserState
@inject NavigationManager NavigationManager


@if (string.IsNullOrEmpty(Error) && CurrentPost != null)
{
    <PostHive.Components.Pages.Tags.Posts.Post CurrentPost="@CurrentPost" CurrentUser="@UserState.CurrentUser"></PostHive.Components.Pages.Tags.Posts.Post>
}
else{
    if (string.IsNullOrEmpty(Error))
    {
        <PostHive.Components.Pages.Tags.Utils.SpinCircle />
    }
    else
    {
        <p class="text-danger">@Error</p>
    }
}

@code {
    [Parameter]
    public string Id { get; set; } = null!;

    public string? Error { get; set; } = null;
    public Post? CurrentPost { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var idPost = int.Parse(Id);
            UserState.CurrentUser = await CookieService.RetrievedUser(UserState.CurrentUser);
            CurrentPost = await PostService.GetPostByIdAsync(idPost);


            CurrentPost = await PostService.GetPostByIdAsync(CurrentPost!.User, UserState.CurrentUser, idPost, true);

            if(CurrentPost == null)
            {
                NavigationManager.NavigateTo("/404");
            }
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
        StateHasChanged();
    }

}
