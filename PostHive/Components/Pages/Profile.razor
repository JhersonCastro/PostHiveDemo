@page "/Profile"
@using PostHive.Services
@inject ISnackbar Snackbar

@inject UserState UserState
@inject PostService PostService
@inject NavigationManager NavigationManager
@inject IWebHostEnvironment WebHotEnv
@inject UserService UserService
@inject CookiesService CookiesService

<script>
    let observers = new Map();

    function startResizeObserver(element, dotNetHelper) {
        if (!element) return;

        const observer = new ResizeObserver(entries => {
            for (let entry of entries) {
                const width = entry.contentRect.width;
                dotNetHelper.invokeMethodAsync("UpdateWidth", width);
            }
        });

        observer.observe(element);
        observers.set(element, observer);
    }

    function stopResizeObserver(element) {
        const observer = observers.get(element);
        if (observer) {
            observer.disconnect();
            observers.delete(element);
        }
    }</script>
@if (UserState.CurrentUser==null)
{
    <PostHive.Components.Pages.Tags.Utils.SpinCircle></PostHive.Components.Pages.Tags.Utils.SpinCircle>
}else
{
    <PageTitle>@UserState.CurrentUser.Name</PageTitle>
        
    <PostHive.Components.Pages.Tags.Utils.UserHeader 
    _userContext="UserState.CurrentUser" 
    uploadFiles="BtnAvatarHandlerAsync"
    />


    <MudContainer MaxWidth="MaxWidth.Medium" Class="my-5">
        <MudGrid>
            <MudItem xs="12">
                <MudPaper Elevation="4" Class="p-4">
                    <!-- Formulario de edición -->
                    <EditForm EditContext="_editPostContext" OnValidSubmit="HandlerPost">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <!-- Selección de privacidad usando MudSelect -->
                        <MudSelect T="PostPrivacy" Label="Privacy" @bind-Value="_postModel!.Privacy" Margin="Margin.Normal">
                            @foreach (var value in Enum.GetValues<PostPrivacy>())
                            {
                                <MudSelectItem Value="@value">@value</MudSelectItem>
                            }
                        </MudSelect>

                        <!-- Campo de texto para el contenido -->
                        <MudTextField T="string" Lines="3" Placeholder="Write something..." Label="Body" @bind-Value="_postModel.Body" Margin="Margin.Normal" />

                        <!-- Acciones: carga de archivos y botón de envío -->
                        <MudGrid Justify="Justify.FlexEnd" AlignItems="Center" Class="mt-2">
                            <!-- Carga de archivos -->
                            <MudItem>
                                <MudFileUpload 
                                    T="IReadOnlyList<IBrowserFile>" 
                                        FilesChanged="BtnUploadPostFiles" 
                                        Accept=".png,.jpg,.jpeg,.mp4" 
                                        MaximumFileCount="@Const.MaxFileCount">
                                    <ActivatorContent>
                                        <MudIcon Icon="@Icons.Material.Rounded.FileUpload" Class="mud-icon-size-large IconHover" />
                                    </ActivatorContent>
                                </MudFileUpload>
                            </MudItem>

                            <!-- Botón de submit dentro de un tooltip -->
                            <MudItem>
                                <MudTooltip Text="Post">
                                    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Publish" ButtonType="ButtonType.Submit" />
                                </MudTooltip>
                            </MudItem>
                        </MudGrid>
                    </EditForm>
                    <div @ref="_mudPaperRef" style="display: flex; flex-wrap: wrap; justify-content: center; gap: 1rem; padding: 1rem;">
                        <!-- Sección de progreso de subida -->
                            @if (_currentUploadFiles > 0)
                            {
                                <MudText Typo="Typo.subtitle2">
                                    Please don't close this page, Uploading @_currentUploadFiles file(s)
                                </MudText>
                            }
                            @foreach (var file in _fileProgresses.Keys)
                            {
                                // ReSharper disable once CompareOfFloatsByEqualityOperator
                                if (_fileProgresses[file] == 100)
                                {
                                //TODO: Make better ui to the Delete file before the post

                                <div style="position: relative; display: inline-block; width: @(mediaSectionWidth)px; height: auto;">

                                    @if (file.FileType.Split('/')[0] == "video")
                                            {
                                                <video class=' rounded-5' controls 
                                                style="width: @(mediaSectionWidth)px; height:auto; 
                                                    aspect-ratio: 1/1; object-fit:contain;background-color:black">
                                                    <source src='@Const.url/Doctypes/@file.Uri' type="@file.FileType">
                                                </video>
                                            }
                                            else
                                            {
                                                <img loading='lazy'
                                             style="width: @(mediaSectionWidth)px; height:auto; aspect-ratio: 1/1;
                                                    object-fit:contain;background-color:black"
                                                    class=' rounded-5' src='@Const.url/Doctypes/@file.Uri' alt='Image' />
                                            }

                                    <MudFab Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete"            
                                    Style="position: absolute; top: 8px; right: 8px; z-index: 10;" />
                                </div>
                                }
                                else
                                {
                                    <MudProgressLinear Value="@_fileProgresses[file]" BufferValue="100" Color="Color.Primary" Class="mt-2" />
                                    <!-- También se muestra el porcentaje con formato -->
                                    <MudText Typo="Typo.caption">@($"{_fileProgresses[file]:0.00}%")</MudText>
                                }
                            }
                    </div>
                   
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
    <div style="margin-top: 3rem;"></div>
    <PostHive.Components.Pages.Tags.Posts.PostSection 
        UserContext="UserState.CurrentUser"
        CurrentUser="UserState.CurrentUser"/>


}

<style>
    .IconHover:hover{
    cursor: pointer;
    }
</style>